<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5c578093-3a58-4997-b485-9bee9cb14fef" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/grpcx/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/grpcx/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/next/ip.go" beforeDir="false" afterPath="$PROJECT_DIR$/next/ip.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/wego/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/wego/app.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
        <option value="go_github" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitToolBoxStore">
    <option name="projectConfigVersion" value="5" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/../../pkg/mod/go.mongodb.org/mongo-driver@v1.9.0/event/monitoring.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/../../pkg/mod/go.opentelemetry.io/otel/trace@v1.21.0/noop/noop.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/ginx/handler_func.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/ginx/middlewares/ratelimit/types.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/gormx/connpool/doublewrite.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/gormx/connpool/doublewrite_test.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/migrator/events/fixer/consumer.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/migrator/scheduler/scheduler.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/migrator/validator/validator.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/saramax/batch_handler_func.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/saramax/consumer_handler_func.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/saramax/types.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/set/set_test.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="KubernetesApiProvider">{
  &quot;contexts&quot;: [
    {
      &quot;name&quot;: &quot;docker-desktop&quot;
    }
  ],
  &quot;isMigrated&quot;: true
}</component>
  <component name="KubernetesSettings">
    <option name="contextName" value="docker-desktop" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2ZZvyl38mPLj7EG30sVwgPsZdsF" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Test.DoubleWriteTestSuite in github.com/bgq98/utils/gormx/connpool.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.ExampleDiffSet in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.ExampleDiffSetFunc in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.ExampleFilterMap in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.ExampleMap in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestContains/dst_exist in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestContains/dst_not_exist in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestContains/length_of_src_is_0 in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestContains/src_nil in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestContainsFunc in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestDiffSet in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestDiffSetFunc in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestDoubleWrite in github.com/bgq98/utils/gormx/connpool.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestDoubleWriteTest in github.com/bgq98/utils/gormx/connpool.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestDoubleWriteTransaction in github.com/bgq98/utils/gormx/connpool.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestFilterMap in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestMap in github.com/bgq98/utils/slice.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestNewValueOf in github.com/bgq98/utils/syncx/atomicx.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestSetx_Delete in github.com/bgq98/utils/set.executor&quot;: &quot;Debug&quot;,
    &quot;Go Test.TestValue_CompareAndSwap in github.com/bgq98/utils/syncx/atomicx.executor&quot;: &quot;Debug&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/biguanqun/go/src/utils&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;fileTemplates&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/redisx/metrics" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestFilterMap in github.com/bgq98/utils/slice">
    <configuration name="ExampleDiffSetFunc in github.com/bgq98/utils/slice" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="utils" />
      <working_directory value="$PROJECT_DIR$/slice" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bgq98/utils/slice" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QExampleDiffSetFunc\E$" />
      <method v="2" />
    </configuration>
    <configuration name="ExampleFilterMap in github.com/bgq98/utils/slice" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="utils" />
      <working_directory value="$PROJECT_DIR$/slice" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bgq98/utils/slice" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QExampleFilterMap\E$" />
      <method v="2" />
    </configuration>
    <configuration name="ExampleMap in github.com/bgq98/utils/slice" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="utils" />
      <working_directory value="$PROJECT_DIR$/slice" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bgq98/utils/slice" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QExampleMap\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestFilterMap in github.com/bgq98/utils/slice" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="utils" />
      <working_directory value="$PROJECT_DIR$/slice" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bgq98/utils/slice" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestFilterMap\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestMap in github.com/bgq98/utils/slice" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="utils" />
      <working_directory value="$PROJECT_DIR$/slice" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/bgq98/utils/slice" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestMap\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestMap in github.com/bgq98/utils/slice" />
        <item itemvalue="Go Test.TestFilterMap in github.com/bgq98/utils/slice" />
        <item itemvalue="Go Test.ExampleMap in github.com/bgq98/utils/slice" />
        <item itemvalue="Go Test.ExampleFilterMap in github.com/bgq98/utils/slice" />
        <item itemvalue="Go Test.ExampleDiffSetFunc in github.com/bgq98/utils/slice" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-467a64f6063b-ee0e143f3e2b-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-233.11799.228" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>